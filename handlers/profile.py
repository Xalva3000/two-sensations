from aiogram import Router, F
from aiogram.types import Message, CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup

from database import db
from LEXICON import TOPICS_LIST
from LEXICON.numbers import age_groups
from keyboards.main import get_main_menu_keyboard, get_settings_keyboard

router = Router()


class AboutMeState(StatesGroup):
    waiting_for_about_me = State()


@router.callback_query(F.data == "menu_view_profile")
async def view_my_profile(callback: CallbackQuery):
    user = await db.get_user(callback.from_user.id)
    if not user:
        await callback.answer("–ü—Ä–æ—Ñ–∏–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return

    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–º—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    topics = await db.get_user_topics(callback.from_user.id)
    topics_text = ", ".join([TOPICS_LIST[i - 1] for i in topics]) if topics else "–ù–µ –≤—ã–±—Ä–∞–Ω—ã"

    profile_text = (
        f"üë§ –í–∞—à –ø—Ä–æ—Ñ–∏–ª—å:\n\n"
        f"üìù –ò–º—è: {user['first_name']}\n"
        f"üéÇ –í–æ–∑—Ä–∞—Å—Ç: {age_groups.get(user['age'], '–ù–µ —É–∫–∞–∑–∞–Ω')}\n"
        f"üë´ –ü–æ–ª: {'–ú—É–∂—Å–∫–æ–π' if user['gender'] == 1 else '–ñ–µ–Ω—Å–∫–∏–π'}\n"
        f"üèôÔ∏è –ì–æ—Ä–æ–¥: {user.get('city', '–ù–µ —É–∫–∞–∑–∞–Ω')}\n"
        f"üéØ –ò–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç –≤–æ–∑—Ä–∞—Å—Ç: {age_groups.get(user['interested_age'], '–õ—é–±–æ–π')}\n"
        f"üìö –¢–µ–º—ã: {topics_text}\n"
    )

    if user.get('about'):
        profile_text += f"\nüìñ –û —Å–µ–±–µ:\n{user['about']}\n"

    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="profile_back")]
    ])

    await callback.message.edit_text(profile_text, reply_markup=keyboard)


@router.callback_query(F.data == "edit_about_me")
async def edit_about_me(callback: CallbackQuery, state: FSMContext):
    await callback.message.edit_text(
        "üìù –ù–∞–ø–∏—à–∏—Ç–µ –æ —Å–µ–±–µ (–º–∞–∫—Å–∏–º—É–º 250 —Å–∏–º–≤–æ–ª–æ–≤):\n\n"
        "–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ —Å–≤–æ–∏—Ö –∏–Ω—Ç–µ—Ä–µ—Å–∞—Ö, —Ö–æ–±–±–∏, —á–µ–º –∑–∞–Ω–∏–º–∞–µ—Ç–µ—Å—å, "
        "—á—Ç–æ –∏—â–µ—Ç–µ –≤ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–µ.",
        reply_markup=InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="‚¨ÖÔ∏è –û—Ç–º–µ–Ω–∞", callback_data="about_me_cancel")]
        ])
    )
    await state.set_state(AboutMeState.waiting_for_about_me)


@router.message(AboutMeState.waiting_for_about_me)
async def process_about_me(message: Message, state: FSMContext):
    about_me = message.text.strip()
    if len(about_me) > 250:
        await message.answer("‚ùå –°–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç. –ú–∞–∫—Å–∏–º—É–º 250 —Å–∏–º–≤–æ–ª–æ–≤.")
        return
    print(message.from_user.id,)
    await db.update_about_me(message.from_user.id, about_me)
    # await message.answer()
    await state.clear()
    menu_title = "‚úÖ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ–±–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞!"
    await message.answer(
        text=f"_____{menu_title}_____",
        reply_markup=get_settings_keyboard()
    )


@router.callback_query(AboutMeState.waiting_for_about_me, F.data == "about_me_cancel")
async def about_me_cancel(callback: CallbackQuery, state: FSMContext):
    await callback.message.edit_text(
        "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:",
        reply_markup=get_main_menu_keyboard()
    )
    await state.clear()


@router.callback_query(F.data == "profile_back")
async def profile_back(callback: CallbackQuery):
    await callback.message.edit_text(
        "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:",
        reply_markup=get_main_menu_keyboard()
    )