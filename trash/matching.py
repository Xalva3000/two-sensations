
# async def find_match(message: Message, user_id: int):
#     user = await db.get_user(user_id)
#
#     if not user or not user.get('gender') or not user.get('age'):
#         await message.answer("–°–Ω–∞—á–∞–ª–∞ –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –∞–Ω–∫–µ—Ç—É!")
#         return
#
#     match = await db.get_random_user(user_id)
#     if not match:
#         await message.answer("–ü–æ–∫–∞ –Ω–µ—Ç –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –∞–Ω–∫–µ—Ç. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ!")
#         return
#
#     # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ —Ç–µ–º –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
#     match_topics = match.get('topics', [])
#     topics_text = ""
#     if match_topics:
#         topics_names = [TOPICS_LIST[i - 1] for i in match_topics if 1 <= i <= 20]
#         topics_text = f"üìù –¢–µ–º—ã: {', '.join(topics_names)}"
#
#     profile_text = (
#         f"üë§ {match['first_name']}\n"
#         f"üéÇ –í–æ–∑—Ä–∞—Å—Ç: {age_groups.get(match['age'], '–ù–µ —É–∫–∞–∑–∞–Ω')}\n"
#         f"üë´ –ü–æ–ª: {'–ú—É–∂—Å–∫–æ–π' if match['gender'] == 1 else '–ñ–µ–Ω—Å–∫–∏–π'}\n"
#     )
#
#     if match.get('city'):
#         profile_text += f"üèôÔ∏è –ì–æ—Ä–æ–¥: {match['city']}\n"
#
#     if user.get('about'):
#         profile_text += f"\nüìñ –û —Å–µ–±–µ:\n{user['about']}\n"
#
#     if topics_text:
#         profile_text += f"{topics_text}\n"
#
#     # –°–æ—Ö—Ä–∞–Ω—è–µ–º ID –Ω–∞–π–¥–µ–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–∏—Ö –¥–µ–π—Å—Ç–≤–∏–π
#     # –ú–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å FSM –∏–ª–∏ –≤—Ä–µ–º–µ–Ω–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ
#     photo = match.get('photo_id', match['photo_id'])
#     if photo:
#         await message.answer_photo(
#             photo,
#             caption=profile_text,
#             reply_markup=get_profile_action_keyboard(match['telegram_id'])
#         )
#     else:
#         await message.answer(
#             text=profile_text,
#             reply_markup=get_profile_action_keyboard(match['telegram_id'])
#         )
